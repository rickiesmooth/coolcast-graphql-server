type Query {
  me: User
  searchUser(string: String!): [User]
}

type Mutation {
  signup(name: String!, email: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createChat(userId: ID!, text: String!): Chat!
}

type AuthPayload {
  token: String!
  user: User!
}

type Chat {
  id: ID!
  messages: [Message!]!
  users: [User!]!
}

type User {
  id: ID!
  email: String!
  name: String!
  chats: [Chat!]
  chat(userId: String!): [Chat]
}

type Message {
  id: ID!
  text: String!
}

type Subscription {
  messageAdded: Message
}
